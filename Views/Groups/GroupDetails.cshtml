@using FruityNET.DTOs
@using Microsoft.AspNetCore.Identity
@using FruityNET.Entities
@using FruityNET.Enums



@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@model GroupDetailsDTO

@{
    ViewData["Title"] = "Group Details";
}

<h4>Group Details</h4><br>
@if(Model.GroupOwner.Equals(Model.CurrentUsername) || Model.Admin is true)
{
  <a class="btn btn-primary btn-sm"
                        asp-controller="Groups"

                        asp-action="AddGroupMember"

                         asp-route-id="@Model.Id">
                        Add User To Group
                </a> <a class="btn btn-primary btn-sm"
                        asp-controller="Groups"

                        asp-action="Edit"

                         asp-route-id="@Model.Id">
                          Edit Group
                </a>
                <a class="btn btn-primary btn-sm"
                        asp-controller="Groups"

                        asp-action="PendingRequests"

                         asp-route-id="@Model.Id">
                          Member Requests
                </a><br></br>
}
else if(Model.Admin is true)
{
 <a class="btn btn-primary btn-sm"
                        asp-controller="Groups"

                        asp-action="Edit"

                         asp-route-id="@Model.Id">
                          Edit Group
                </a>
                <a class="btn btn-primary btn-sm"
                        asp-controller="Groups"

                        asp-action="PendingRequests"

                         asp-route-id="@Model.Id">
                          Member Requests
                </a><br></br>
}
else
{

  @if(!Model.PendingRequest  && !Model.ExistingMember)
  {
      <a class="btn btn-success btn-sm"
                        asp-controller="Groups"

                        asp-action="SendRequest"

                         asp-route-id="@Model.Id">
                          Join Group
                </a><br></br>
  }
  else if(Model.PendingRequest)
  {
    <p>Awaiting request response</p>
  }
  else if(Model.ExistingMember)
  {
    <p>You are a member of this group</p>
  }
}






<div class="card">
  <div class="card-header">
    @Model.Name
  </div>
  <div class="card-body">
    <h5 class="card-title">Description: @Model.Description</h5>
    <p class="card-text">Created On: @Model.CreationDate</p>
        <p class="card-text">Created By: @Model.GroupOwner</p>

   
  </div>
</div>
<br></br>


<h3>Group Members</h3>
<ul class="list-group">
  @foreach (var user in Model.GroupMembers)
  {
        <li class="list-group-item">@user.Username
          @if(user.UserId != UserManager.GetUserId(User) )
          {
            @if(Model.GroupOwner.Equals(Model.CurrentUsername))
            {
             <a class="btn btn-danger btn-sm"
                        asp-controller="Groups"

                        asp-action="RemoveUser"

                         asp-route-id="@user.Id">
                        Remove
                </a>
                @if(user.Type != GroupUserType.Admin)
                {
                   <a class="btn btn-primary btn-sm"
                        asp-controller="Groups"

                        asp-action="AddGroupAdmin"

                         asp-route-id="@user.Id">
                        Grant Admin Access
                </a>
                }
                else
                {
                   <a class="btn btn-danger btn-sm"
                        asp-controller="Groups"

                        asp-action="RevokeGroupAdmin"

                         asp-route-id="@user.Id">
                        Revoke Admin 
                </a>
                }
               }
          }
         
         
        </li>

        

  }
  @if(Model.GroupMembers.Count is 0)
  {
    <p>Add Members To Group.</p>
  }
